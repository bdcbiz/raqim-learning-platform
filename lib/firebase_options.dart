// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members

// Temporarily disabled Firebase imports due to configuration issues
// import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;

import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

// Mock FirebaseOptions class until Firebase is properly configured
class FirebaseOptions {
  final String apiKey;
  final String appId;
  final String messagingSenderId;
  final String projectId;
  final String? authDomain;
  final String? databaseURL;
  final String? storageBucket;
  final String? measurementId;
  final String? trackingId;
  final String? deepLinkURLScheme;
  final String? androidClientId;
  final String? iosClientId;
  final String? iosBundleId;
  final String? appGroupId;

  const FirebaseOptions({
    required this.apiKey,
    required this.appId,
    required this.messagingSenderId,
    required this.projectId,
    this.authDomain,
    this.databaseURL,
    this.storageBucket,
    this.measurementId,
    this.trackingId,
    this.deepLinkURLScheme,
    this.androidClientId,
    this.iosClientId,
    this.iosBundleId,
    this.appGroupId,
  });
}

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'demo-project',
    appId: '1:demo-project:web:demo',
    messagingSenderId: 'demo-project',
    projectId: 'demo-project',
    authDomain: 'demo-project.firebaseapp.com',
    storageBucket: 'demo-project.appspot.com',
    measurementId: 'G-DEMO',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBmUYCUYGDrUYLQsJYhU5xJ0QjGlVQpCHI',
    appId: '1:123456789:android:abcd123456789efg',
    messagingSenderId: '123456789',
    projectId: 'raqim-learning-platform',
    storageBucket: 'raqim-learning-platform.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBmUYCUYGDrUYLQsJYhU5xJ0QjGlVQpCHI',
    appId: '1:123456789:ios:abcd123456789efg',
    messagingSenderId: '123456789',
    projectId: 'raqim-learning-platform',
    storageBucket: 'raqim-learning-platform.appspot.com',
    iosBundleId: 'com.raqim.learning',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyBmUYCUYGDrUYLQsJYhU5xJ0QjGlVQpCHI',
    appId: '1:123456789:macos:abcd123456789efg',
    messagingSenderId: '123456789',
    projectId: 'raqim-learning-platform',
    storageBucket: 'raqim-learning-platform.appspot.com',
    iosBundleId: 'com.raqim.learning',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBmUYCUYGDrUYLQsJYhU5xJ0QjGlVQpCHI',
    appId: '1:123456789:windows:abcd123456789efg',
    messagingSenderId: '123456789',
    projectId: 'raqim-learning-platform',
    storageBucket: 'raqim-learning-platform.appspot.com',
  );
}